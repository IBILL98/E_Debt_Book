Index: app/src/main/java/com/example/e_debt_book/ui/marketHome/MarketHomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.e_debt_book.ui.marketHome;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.navigation.fragment.NavHostFragment;\r\n\r\nimport com.example.e_debt_book.R;\r\nimport com.example.e_debt_book.model.Customer;\r\nimport com.example.e_debt_book.model.Debt;\r\nimport com.example.e_debt_book.model.Item;\r\nimport com.example.e_debt_book.model.Market;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\n\r\n\r\n\r\n\r\npublic class MarketHomeFragment extends Fragment {\r\n\r\n\r\n    FloatingActionButton addNewDebtButton;\r\n    DatabaseReference mRootRef, conditionRef;\r\n    ListView listView;\r\n    ArrayList<Debt> arrayList = new ArrayList<>();\r\n    float totallend;\r\n    TextView textView2;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_market_home, container, false);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //setContentView(R.layout.activity_my_customers);\r\n\r\n        arrayList.clear();\r\n        totallend = 0;\r\n\r\n        mRootRef = FirebaseDatabase.getInstance().getReference();\r\n        listView = getActivity().findViewById(R.id.debtsList);\r\n        textView2 = getActivity().findViewById(R.id.textView2);\r\n        addNewDebtButton = getActivity().findViewById(R.id.addNewDebtButton2);\r\n        Market market = (Market) getActivity().getIntent().getSerializableExtra(\"Market\");\r\n        MyAdapter arrayAdapter = new MyAdapter(getActivity(),arrayList);\r\n        listView.setAdapter(arrayAdapter);\r\n\r\n\r\n        conditionRef = mRootRef.child(\"Debts\");\r\n        Query query = conditionRef.orderByChild(\"marketPhone\").equalTo(market.getPhone());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                for (DataSnapshot data : snapshot.getChildren()) {\r\n                    String debtId = data.getKey();\r\n                    Debt debt = data.getValue(Debt.class);\r\n                    totallend = Float.parseFloat(debt.getAmount()) + totallend;\r\n                    getitems(debtId, new MyCallback() {\r\n                        @Override\r\n                        public void onCallback(ArrayList<Item> itemArrayList) {\r\n                            debt.setItemList(itemArrayList);\r\n                            debt.setDebtID(debtId);\r\n                            arrayList.add(debt);\r\n                            arrayAdapter.notifyDataSetChanged();\r\n                        }\r\n                    });\r\n                }\r\n                textView2.setText(textView2.getText().toString() + \" \" + totallend);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n                int i = position;\r\n                Debt selectedDebt = arrayList.get(i);\r\n                Intent intent = getActivity().getIntent();\r\n                Bundle bundle = new Bundle();\r\n\r\n                getCustomer(selectedDebt.getCustomerPhone(), new CustomerCallback() {\r\n                    @Override\r\n                    public void customerOnCallback(Customer customer) {\r\n                        bundle.putSerializable(\"Customer\", customer);\r\n                        bundle.putSerializable(\"Market\", market);\r\n                        bundle.putSerializable(\"Debt\", selectedDebt);\r\n                        intent.putExtras(bundle);\r\n\r\n                        NavHostFragment.findNavController(MarketHomeFragment.this).navigate(R.id.action_nav_market_home_to_debt_info);\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n        addNewDebtButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = getActivity().getIntent();\r\n                Bundle b = new Bundle();\r\n                b.putSerializable(\"Market\", market);\r\n                i.putExtras(b);\r\n                NavHostFragment.findNavController(MarketHomeFragment.this).navigate(R.id.action_nav_market_home_to_add_debt);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public ArrayList<Item> getitems(String id, MyCallback myCallback) {\r\n        ArrayList<Item> itemlist = new ArrayList<>();\r\n        DatabaseReference conditionRefitems = mRootRef.child(\"Debts\").child(id).child(\"itemList\");\r\n        conditionRefitems.orderByKey().addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                for (DataSnapshot data : snapshot.getChildren()) {\r\n                    Item item = data.getValue(Item.class);\r\n                    Item item1 = new Item(item.getName(), item.getPrice());\r\n                    itemlist.add(item1);\r\n                }\r\n                myCallback.onCallback(itemlist);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n        return itemlist;\r\n    }\r\n\r\n\r\n    public void getCustomer(String phone, CustomerCallback customerCallback) {\r\n        DatabaseReference customerRef = mRootRef.child(\"Customers\");\r\n        Customer customer = new Customer();\r\n        customerRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                for (DataSnapshot ds : snapshot.getChildren()) {\r\n                    Customer customer1 = ds.getValue(Customer.class);\r\n                    String userId = ds.getKey();\r\n                    customer1.setPhone(userId);\r\n                    if (customer1.getPhone().equals(phone)) {\r\n                        customer.setPhone(customer1.getPhone());\r\n                        customer.setStatus(customer1.getStatus());\r\n                        customer.setEmail(customer1.getEmail());\r\n                        customer.setName(customer1.getName());\r\n                        customer.setLastname(customer1.getLastname());\r\n\r\n                        customerCallback.customerOnCallback(customer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private interface MyCallback {\r\n        void onCallback(ArrayList<Item> arrayList);\r\n    }\r\n\r\n    private interface CustomerCallback {\r\n        void customerOnCallback(Customer customer);\r\n    }\r\n\r\n\r\n\r\n    public class MyAdapter extends ArrayAdapter<Debt> {\r\n\r\n        public MyAdapter(Context context, ArrayList<Debt> debts){\r\n            super(context, 0, debts);\r\n        }\r\n\r\n        @Override\r\n        public View getView(int position, View convertView, ViewGroup parent) {\r\n            // Get the data item for this position\r\n            Debt debt = getItem(position);\r\n            // Check if an existing view is being reused, otherwise inflate the view\r\n            if (convertView == null) {\r\n                convertView = LayoutInflater.from(getContext()).inflate(R.layout.my_listview, parent, false);\r\n            }\r\n            // Lookup view for data population\r\n            TextView fullname = (TextView) convertView.findViewById(R.id.fullName);\r\n            TextView amount = (TextView) convertView.findViewById(R.id.amount);\r\n            TextView phone = (TextView) convertView.findViewById(R.id.phone);\r\n            TextView date = (TextView) convertView.findViewById(R.id.date);\r\n            // Populate the data into the template view using the data object\r\n            phone.setText(debt.getCustomerPhone());\r\n            amount.setText(debt.getAmount());\r\n            date.setText(debt.getDateOfLoan());\r\n            DatabaseReference databaseReferenc = FirebaseDatabase.getInstance().getReference();\r\n\r\n            getCustomer(debt.getCustomerPhone(), new CustomerCallback() {\r\n                @Override\r\n                public void customerOnCallback(Customer customer) {\r\n                    fullname.setText(customer.getName() + \" \" + customer.getLastname());\r\n                }\r\n            });\r\n\r\n            // Return the completed view to render on screen\r\n            return convertView;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/e_debt_book/ui/marketHome/MarketHomeFragment.java	(revision 07ba468aeae56712f6ed0f933d487f2249095adb)
+++ app/src/main/java/com/example/e_debt_book/ui/marketHome/MarketHomeFragment.java	(date 1610017312118)
@@ -185,17 +185,19 @@
 
     }
 
-    private interface MyCallback {
-        void onCallback(ArrayList<Item> arrayList);
-    }
-
     private interface CustomerCallback {
         void customerOnCallback(Customer customer);
     }
 
+    private interface MyCallback {
+        void onCallback(ArrayList<Item> arrayList);
+    }
+
 
 
-    public class MyAdapter extends ArrayAdapter<Debt> {
+
+
+    private class MyAdapter extends ArrayAdapter<Debt> {
 
         public MyAdapter(Context context, ArrayList<Debt> debts){
             super(context, 0, debts);
@@ -214,10 +216,13 @@
             TextView amount = (TextView) convertView.findViewById(R.id.amount);
             TextView phone = (TextView) convertView.findViewById(R.id.phone);
             TextView date = (TextView) convertView.findViewById(R.id.date);
+
             // Populate the data into the template view using the data object
+
             phone.setText(debt.getCustomerPhone());
             amount.setText(debt.getAmount());
             date.setText(debt.getDateOfLoan());
+
             DatabaseReference databaseReferenc = FirebaseDatabase.getInstance().getReference();
 
             getCustomer(debt.getCustomerPhone(), new CustomerCallback() {
